
<?php

function twadmin_preprocess_html(&$variables) {
// Add conditional stylesheets for admin pages on admin theme.
  if (arg(0)=="admin") {
    // reference your own stylesheet    
    drupal_add_css(drupal_get_path('module', 'twadmin') . '/twadmin.css', array('weight' => CSS_THEME));
    drupal_add_js(drupal_get_path('module', 'twadmin') . '/twadmin.js', array('weight' => CSS_THEME));
  }

  // TRIP2-391
  if (!in_array('administrator', $variables['user']->roles)) {
    if (path_is_admin(CURRENT_PATH())) {
      if (strpos(CURRENT_PATH(), 'node') !== false) {
        if (strpos(CURRENT_PATH(), 'edit') !== false) {
          drupal_add_js(drupal_get_path('module', 'twadmin') . '/twadmin.node.js', array('weight' => JS_THEME));
        }
      }
    }
  }

  // TRIP2-501 
  if (in_array('Help Desk', $variables['user']->roles)) {
    drupal_add_js(drupal_get_path('module', 'twadmin') . '/twadmin.hide_fields_helpdesk.js', array('weight' => JS_THEME));
  }
}

/**
* Implements hook_menu_local_tasks_alter()
*
* @param $data
* @param $router_item
* @param $root_path
*/
function twadmin_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if (strpos($root_path, 'user/%/edit') !== false) {
    foreach ($data['tabs'][1]['output'] as $k => $t) {
      switch ($t['#link']['title']) {
        case "Personal Information":
          $data['tabs'][1]['output'][$k]['#weight'] = '0';
          break; 
        case "Account":
          $data['tabs'][1]['output'][$k]['#weight'] = '1';
          break; 
        case "Indicate EVC": 
          $data['tabs'][1]['output'][$k]['#link']['title'] = 'EVC Information';
          $data['tabs'][1]['output'][$k]['#weight'] = '2';
          break; 
        case "Employment Information": 
          $data['tabs'][1]['output'][$k]['#weight'] = '3';
          break; 
        case "Privacy Information":
          $data['tabs'][1]['output'][$k]['#weight'] = '4';
          break; 
      }
    }
  }
}

function twadmin_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'library_document_node_form':
      $form['#after_build'][] = 'twadmin_after_build';
      $form['#validate'][] = 'twadmin_author_check_validate';
      //T2OM-134: Checking if user is OSINT Admin and if so hiding publishing options
      global $user;
      $account = $user;
      if (user_has_role(4, $account)) {
        $form['options']['#access'] = FALSE;
      }
      break;
    case 'what_s_new_article_node_form':
      $form['#after_build'][] = 'twadmin_after_build_css';
      global $user;
      $account = $user;
      if (user_has_role(4, $account)) {
        $form['options']['#access'] = FALSE;
      }
      break;
    case 'video_node_form':
      $form['#after_build'][] = 'twadmin_after_build';
      global $user;
      $account = $user;
      if (user_has_role(4, $account)) {
        $form['options']['#access'] = FALSE;
      }
      break;
    case 'osint_item_node_form':
      $form['#after_build'][] = 'twadmin_after_build';
      global $user;
      $account = $user;
      if (user_has_role(4, $account)) {
        $form['options']['#access'] = FALSE;
      }
      break;
    case 'carousel_item_node_form':
      global $user;
      $account = $user;
      if (user_has_role(4, $account)) {
        $form['options']['#access'] = FALSE;
      }
      break;
  }
}

function twadmin_after_build($form, &$form_state) {
  $path = drupal_get_path('module', 'twadmin');
  drupal_add_js ("$path/js/node.js");
  return $form;
}

function twadmin_author_check_validate($form, &$form_state) {
  $na_term = taxonomy_get_term_by_name('N/A', 'author_publisher');
  $na_term = array_shift($na_term);
  if (isset($form_state['values']['field_author_publisher']['und'])) {
    foreach ($form_state['values']['field_author_publisher']['und'] as $o) {
      if ($o['tid'] == $na_term->tid) {
        $size = sizeof($form_state['values']['field_author_publisher']['und']);
        if ($size > 1) {
          form_set_error('field_author_publisher', 'Author N/A is selected; No other Author/Publisher may be selected in conjunction with N/A.');
        }
      }
    }
  }
}

function twadmin_after_build_css($form, &$form_state) {
  $path = drupal_get_path('module', 'twadmin');
  drupal_add_css("$path/css/node.css");
  return $form;
}